openapi: 3.0.3
info:
  title: Transaction Service API
  description: API para la gestión de transacciones bancarias
  version: 1.0.0
servers:
  - url: http://localhost:8083
    description: Servidor de desarrollo
  - url: http://api-gateway:8080/transactions
    description: API Gateway

tags:
  - name: transactions
    description: Operaciones con transacciones bancarias

paths:
  /transactions:
    get:
      tags:
        - transactions
      summary: Obtener todas las transacciones
      description: Retorna un listado de todas las transacciones registradas
      operationId: getAllTransactions
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDto'

  /transactions/{id}:
    get:
      tags:
        - transactions
      summary: Obtener transacción por ID
      description: Retorna una transacción específica según su ID
      operationId: getTransactionById
      parameters:
        - name: id
          in: path
          description: ID de la transacción
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDto'
        '404':
          description: Transacción no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transactions/account/{accountId}:
    get:
      tags:
        - transactions
      summary: Obtener transacciones por cuenta
      description: Retorna todas las transacciones asociadas a una cuenta
      operationId: getTransactionsByAccountId
      parameters:
        - name: accountId
          in: path
          description: ID de la cuenta
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDto'

  /transactions/credit/{creditId}:
    get:
      tags:
        - transactions
      summary: Obtener transacciones por crédito
      description: Retorna todas las transacciones asociadas a un crédito
      operationId: getTransactionsByCreditId
      parameters:
        - name: creditId
          in: path
          description: ID del crédito
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDto'

  /transactions/credit-card/{creditCardId}:
    get:
      tags:
        - transactions
      summary: Obtener transacciones por tarjeta de crédito
      description: Retorna todas las transacciones asociadas a una tarjeta de crédito
      operationId: getTransactionsByCreditCardId
      parameters:
        - name: creditCardId
          in: path
          description: ID de la tarjeta de crédito
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDto'

  /transactions/customer/{customerId}:
    get:
      tags:
        - transactions
      summary: Obtener transacciones por cliente
      description: Retorna todas las transacciones asociadas a un cliente
      operationId: getTransactionsByCustomerId
      parameters:
        - name: customerId
          in: path
          description: ID del cliente
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDto'

  /transactions/date-range:
    get:
      tags:
        - transactions
      summary: Obtener transacciones por rango de fechas
      description: Retorna todas las transacciones en un rango de fechas
      operationId: getTransactionsByDateRange
      parameters:
        - name: startDate
          in: query
          description: Fecha de inicio (formato ISO)
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Fecha de fin (formato ISO)
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDto'

  /transactions/account/{accountId}/date-range:
    get:
      tags:
        - transactions
      summary: Obtener transacciones por cuenta y rango de fechas
      description: Retorna todas las transacciones de una cuenta en un rango de fechas
      operationId: getTransactionsByAccountIdAndDateRange
      parameters:
        - name: accountId
          in: path
          description: ID de la cuenta
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: Fecha de inicio (formato ISO)
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Fecha de fin (formato ISO)
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDto'

  /transactions/deposit:
    post:
      tags:
        - transactions
      summary: Realizar un depósito
      description: Registra una transacción de depósito en una cuenta
      operationId: deposit
      requestBody:
        description: Datos del depósito
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequest'
        required: true
      responses:
        '201':
          description: Depósito realizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDto'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transactions/withdrawal:
    post:
      tags:
        - transactions
      summary: Realizar un retiro
      description: Registra una transacción de retiro de una cuenta
      operationId: withdraw
      requestBody:
        description: Datos del retiro
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawalRequest'
        required: true
      responses:
        '201':
          description: Retiro realizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDto'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transactions/payment:
    post:
      tags:
        - transactions
      summary: Realizar un pago de crédito
      description: Registra una transacción de pago a un crédito
      operationId: payCredit
      requestBody:
        description: Datos del pago
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      responses:
        '201':
          description: Pago realizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDto'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transactions/consumption:
    post:
      tags:
        - transactions
      summary: Registrar un consumo de tarjeta de crédito
      description: Registra una transacción de consumo con tarjeta de crédito
      operationId: consumeCreditCard
      requestBody:
        description: Datos del consumo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumptionRequest'
        required: true
      responses:
        '201':
          description: Consumo registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDto'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    TransactionDto:
      type: object
      properties:
        id:
          type: string
          example: "60c73def2aa3a75f5c5d0f7e"
        accountId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7c"
        creditId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7f"
        creditCardId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7g"
        type:
          type: string
          enum: [DEPOSIT, WITHDRAWAL, PAYMENT, CONSUMPTION]
          example: "DEPOSIT"
        amount:
          type: number
          format: double
          example: 500.00
        description:
          type: string
          example: "Depósito inicial"
        transactionDate:
          type: string
          format: date-time
          example: "2023-07-15T12:00:00Z"
        customerId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7b"
        referenceNumber:
          type: string
          example: "TX-12345ABCDE"

    DepositRequest:
      type: object
      properties:
        accountId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7c"
        amount:
          type: number
          format: double
          example: 500.00
        description:
          type: string
          example: "Depósito inicial"
        customerId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7b"
      required:
        - accountId
        - amount
        - customerId

    WithdrawalRequest:
      type: object
      properties:
        accountId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7c"
        amount:
          type: number
          format: double
          example: 200.00
        description:
          type: string
          example: "Retiro cajero automático"
        customerId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7b"
      required:
        - accountId
        - amount
        - customerId

    PaymentRequest:
      type: object
      properties:
        creditId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7f"
        amount:
          type: number
          format: double
          example: 300.00
        description:
          type: string
          example: "Pago de cuota"
        customerId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7b"
      required:
        - creditId
        - amount
        - customerId

    ConsumptionRequest:
      type: object
      properties:
        creditCardId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7g"
        amount:
          type: number
          format: double
          example: 150.00
        description:
          type: string
          example: "Compra en tienda"
        customerId:
          type: string
          example: "60c73def2aa3a75f5c5d0f7b"
      required:
        - creditCardId
        - amount
        - customerId

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2023-07-15T12:00:00Z"
        status:
          type: integer
          format: int32
          example: 404
        error:
          type: string
          example: "Not Found"
        message:
          type: string
          example: "Account not found with id: 60c73def2aa3a75f5c5d0f7c"